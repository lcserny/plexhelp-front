---
openapi: 3.0.3
info:
    title: plexhelp-commander API
    version: 2.0.0
paths:
    /api/v1/commands:
        post:
            tags:
                - Command Resource
            operationId: executeCommand
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CommandRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandResponse'
    /api/v1/media-downloads:
        post:
            tags:
                - Media Download Resource
            operationId: searchDownloadedMedia
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchDownloadedMedia'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/DownloadedMediaData'
    /api/v1/media-moves:
        post:
            tags:
                - Media Move Resource
            operationId: moveMedia
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MediaMoveRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/MediaMoveError'
    /api/v1/media-moves/all:
        post:
            tags:
                - Media Move Resource
            operationId: moveAllMedia
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: '#/components/schemas/MediaMoveRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/MediaMoveError'
    /api/v1/media-renames:
        post:
            tags:
                - Media Rename Resource
            operationId: produceRenames
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MediaRenameRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RenamedMediaOptions'
    /api/v1/media-searches:
        get:
            tags:
                - Media Search Resource
            operationId: searchMedia
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/MediaFileGroup'
    /api/v1/magnets:
        post:
            tags:
                - Torrent Magnet Resource
            operationId: addMagnet
            requestBody:
                content:
                    text/plain:
                        schema:
                            type: string
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MagnetData'
        get:
            x-spring-paginated: true
            tags:
                - Torrent Magnet Resource
            operationId: getAll
            parameters:
                - name: name
                  in: query
                  description: Magnet name to filter by
                  required: false
                  schema:
                      type: string
                      example: MovieX
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PaginatedMagnets'
components:
    schemas:
        CommandRequest:
            type: object
            properties:
                name:
                    type: string
                params:
                    type: array
                    items:
                        type: string
                    nullable: true
            required:
                - name
        CommandResponse:
            type: object
            properties:
                status:
                    $ref: '#/components/schemas/Status'
            required:
                - status
        DownloadedMediaData:
            type: object
            properties:
                id:
                    type: string
                fileName:
                    type: string
                fileSize:
                    format: int64
                    type: integer
                dateDownloaded:
                    format: date-time
                    type: string
                    example: 2022-03-10T12:15:50
                downloadComplete:
                    type: boolean
                    default: false
        MediaDescriptionData:
            type: object
            properties:
                posterUrl:
                    type: string
                title:
                    type: string
                date:
                    type: string
                    example: 2022 or 2022-10-02
                description:
                    type: string
                cast:
                    type: array
                    items:
                        type: string
        MediaFileGroup:
            type: object
            properties:
                path:
                    type: string
                    description: The absolute parent source path of the videos list
                name:
                    type: string
                    description: The name of the target subfolder that will be created in the media destination dir
                videos:
                    type: array
                    description: The videos names list (gets merged with path above), can contain subpaths as well
                    items:
                        type: string
                season:
                    format: int32
                    type: integer
                    description: Optional season to use for the subfolder in case of TV series.
                noParent:
                    type: boolean
                    default: false
                    description: If the media found has a parent directory in the downloads root
            required:
                - path
                - name
                - videos
        MediaFileType:
            enum:
                - MOVIE
                - TV
            type: string
        MediaMoveError:
            type: object
            properties:
                mediaPath:
                    type: string
                error:
                    type: string
        MediaMoveRequest:
            type: object
            properties:
                fileGroup:
                    $ref: '#/components/schemas/MediaFileGroup'
                type:
                    $ref: '#/components/schemas/MediaFileType'
            required:
                - fileGroup
                - type
        MediaRenameOrigin:
            enum:
                - DISK
                - NAME
                - CACHE
                - EXTERNAL
            type: string
        MediaRenameRequest:
            type: object
            properties:
                name:
                    type: string
                type:
                    $ref: '#/components/schemas/MediaFileType'
            required:
                - name
                - type
        RenamedMediaOptions:
            type: object
            properties:
                origin:
                    $ref: '#/components/schemas/MediaRenameOrigin'
                mediaDescriptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/MediaDescriptionData'
        Status:
            enum:
                - SUCCESS
                - NOT_FOUND
                - FAILED
            type: string
        MagnetData:
            type: object
            properties:
                name:
                    type: string
                hash:
                    type: string
                url:
                    type: string
                dateAdded:
                    type: string
                    format: date-time
                downloaded:
                    type: boolean
                    default: false
                dateDownloaded:
                    type: string
                    format: date-time
            required:
                - name
                - hash
                - url
                - dateAdded
        PaginatedMagnets:
            type: object
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/MagnetData'
                page:
                    type: object
                    properties:
                        size:
                            type: integer
                            format: int32
                        number:
                            type: integer
                            format: int32
                        totalElements:
                            type: integer
                            format: int64
                        totalPages:
                            type: integer
                            format: int32
                    required:
                        - size
                        - number
                        - totalElements
                        - totalPages
            required:
                - content
                - page
        SearchDownloadedMedia:
            type: object
            properties:
                date:
                    type: object
                    description: Date of the downloaded media to search for
                    properties:
                        year:
                            type: integer
                            format: int32
                        month:
                            type: integer
                            format: int32
                        day:
                            type: integer
                            format: int32
                    required:
                        - year
                        - month
                        - day
                downloaded:
                    type: boolean
                    description: Search only for the downloaded media
                    default: false
                names:
                    type: array
                    description: The media names to search for
                    items:
                        type: string
