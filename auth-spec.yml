---
openapi: 3.0.3
info:
    title: auth-service API
    version: 1.0.0
paths:
    /security/users:
        post:
            tags:
                - Create User Resource
            operationId: register
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UserRegistration'
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: string
                                description: the result message
                                example: user created
                "400":
                    description: error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApplicationErrorResponse'
        get:
            tags:
                - Get Users Resource
            operationId: getUsers
            parameters:
                - name: page
                  in: query
                  description: The page number to retrieve
                  required: false
                  schema:
                      type: integer
                      format: int32
                - name: limit
                  in: query
                  description: The number of items per page
                  required: false
                  schema:
                      type: integer
                      format: int32
                - name: username
                  in: query
                  description: Filter for username
                  required: false
                  schema:
                      type: string
                - name: firstName
                  in: query
                  description: Filter for firstName
                  required: false
                  schema:
                      type: string
                - name: lastName
                  in: query
                  description: Filter for lastName
                  required: false
                  schema:
                      type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PaginatedUsers'
                "400":
                    description: error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApplicationErrorResponse'
    /security/users/{id}:
        get:
            tags:
                - Get Single User
            operationId: getUser
            parameters:
                - name: id
                  in: path
                  description: The user ID
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserData'
                "400":
                    description: error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApplicationErrorResponse'
        put:
            tags:
                - Update Single User Data
            operationId: updateUser
            parameters:
                - name: id
                  in: path
                  description: The user ID
                  required: true
                  schema:
                      type: string
            requestBody:
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/UserData'
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserData'
                "400":
                    description: error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApplicationErrorResponse'

    /security/authenticate:
        post:
            tags:
                - Login
            operationId: signIn
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserRegistration'
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserAccess'
                "400":
                    description: error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApplicationErrorResponse'
    /security/authenticate/logout:
        post:
            tags:
                - Logout
            operationId: signOut
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseMessage'
                "400":
                    description: error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApplicationErrorResponse'
    /security/authenticate/refresh:
        post:
            tags:
                - Refresh token
            operationId: refresh
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserAccess'
                "400":
                    description: error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApplicationErrorResponse'

components:
    schemas:
        UserRegistration:
            type: object
            properties:
                username:
                    type: string
                    minLength: 1
                password:
                    type: string
                    minLength: 1
                firstName:
                    type: string
                lastName:
                    type: string
            required:
                - username
                - password
        UserAccess:
            type: object
            properties:
                accessToken:
                    type: string
                    minLength: 1
                userId:
                    type: string
                roles:
                    type: array
                    items:
                        $ref: "#/components/schemas/UserRole"
                perms:
                    type: array
                    items:
                        $ref: "#/components/schemas/UserPerm"
            required:
                - accessToken
                - userId
                - roles
                - perms
        UserData:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                password:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                roles:
                    type: array
                    items:
                        $ref: "#/components/schemas/UserRole"
                perms:
                    type: array
                    items:
                        $ref: "#/components/schemas/UserPerm"
                status:
                    $ref: "#/components/schemas/UserStatus"
                created:
                    type: string
                    format: date-time
        PaginatedBase:
            type: object
            properties:
                hasMore:
                    type: boolean
                total:
                    type: integer
                    format: int64
            required:
                - hasMore
                - total
        PaginatedUsers:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginatedBase'
                - properties:
                    data:
                        type: array
                        items:
                            $ref: '#/components/schemas/UserData'
                - required:
                    - data
        NameValuePair:
            type: object
            properties:
                name:
                    type: string
                value:
                    type: string
            required:
                - name
        UserRole:
            enum:
                - ADMIN
                - STANDARD
                - GUEST
            type: string
        UserStatus:
            enum:
                - active
                - inactive
            type: string
        UserPerm:
            enum:
                - READ
                - WRITE
            type: string
        ResponseMessage:
            type: object
            properties:
                message:
                    type: string
                    description: the message
        ApplicationErrorResponse:
            type: object
            properties:
                error:
                    type: string
                    description: the error type
                message:
                    type: string
                    description: the error description
                code:
                    type: string
                    description: the specific application error code, if available
                    default: no_code
            required:
                - error
                - message
                - code
